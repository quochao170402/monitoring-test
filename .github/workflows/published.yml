# # This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# # For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

# name: Monitoring package publish workflow

# on:
#   push:
#     branches: [master]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - uses: actions/setup-node@v4
#         with:
#           node-version: 20
#       - run: npm ci

#   publish-gpr:
#     needs: build
#     runs-on: ubuntu-latest
#     permissions:
#       contents: write
#       packages: write
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 0 # Needed for git history access
#           token: ${{ secrets.GITHUB_TOKEN }} # Or a PAT with write access

#       - uses: actions/setup-node@v4
#         with:
#           node-version: 20
#           registry-url: https://npm.pkg.github.com/

#       - name: Configure Git
#         run: |
#           git config --global user.name "quochao170402"
#           git config --global user.email "quochao170402@gmail.com"

#       - name: Bump version
#         run: |
#           npm version patch -m "[RELEASE] %s"

#       - name: Push changes
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         run: |
#           git push --follow-tags

#       - name: Publish
#         env:
#           NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         run: npm publish

# This workflow will run tests and publish a package to GitHub Packages on push to master
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Build and Publish Package

on:
  push:
    branches: [master]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci

  publish-gpr:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for git history access
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com/
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Check if version bump is needed
        id: check_version
        run: |
          # Get the current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          
          # Check if this version already exists as a git tag
          if git rev-parse "v$CURRENT_VERSION" >/dev/null 2>&1; then
            echo "needs_bump=true" >> $GITHUB_OUTPUT
          else
            echo "needs_bump=false" >> $GITHUB_OUTPUT
          fi
          
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Bump version
        if: steps.check_version.outputs.needs_bump == 'true'
        run: |
          npm version patch -m "[RELEASE] %s"

      - name: Build package (if needed)
        run: npm run build --if-present

      - name: Publish to GitHub Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Only publish if the package doesn't already exist with this version
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          
          echo "Attempting to publish $PACKAGE_NAME@$PACKAGE_VERSION"
          npm publish --access restricted || echo "Package may already exist with this version"

      - name: Push version changes
        if: steps.check_version.outputs.needs_bump == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push --follow-tags

      - name: Create Release
        if: steps.check_version.outputs.needs_bump == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.check_version.outputs.current_version }}
          release_name: Release v${{ steps.check_version.outputs.current_version }}
          draft: false
          prerelease: false